<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:metrics="clr-namespace:Avalonia.Diagnostics.ViewModels.Metrics;assembly=DiagnosticsTools"
             xmlns:conv="clr-namespace:Avalonia.Diagnostics.Converters;assembly=DiagnosticsTools.Metrics"
             xmlns:ctrl="clr-namespace:Avalonia.Diagnostics.Controls;assembly=DiagnosticsTools"
             x:Class="Avalonia.Diagnostics.Views.MetricsPageView"
             x:DataType="metrics:MetricsPageViewModel"
             x:CompileBindings="True"
             Margin="16">
  <UserControl.Resources>
    <conv:MetricBrushConverter x:Key="HistogramStrokeBrushConverter"
                               Kind="Histogram"
                               Alpha="1" />
    <conv:MetricBrushConverter x:Key="HistogramFillBrushConverter"
                               Kind="Histogram"
                               Alpha="0.26" />
    <conv:MetricBrushConverter x:Key="GaugeStrokeBrushConverter"
                               Kind="Gauge"
                               Alpha="1" />
    <conv:MetricBrushConverter x:Key="GaugeFillBrushConverter"
                               Kind="Gauge"
                               Alpha="0.26" />

    <LinearGradientBrush x:Key="MetricsHeaderBackground" StartPoint="0,0" EndPoint="1,1">
      <GradientStop Offset="0" Color="#262C38" />
      <GradientStop Offset="1" Color="#1A4AC0FF" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MetricsSurfaceBrush" Color="#202530" />
    <SolidColorBrush x:Key="MetricsDividerBrush" Color="#303645" />
  </UserControl.Resources>

  <UserControl.Styles>
    <Style Selector="Border.metric-card">
      <Setter Property="Background" Value="{StaticResource MetricsSurfaceBrush}" />
      <Setter Property="BorderBrush" Value="{StaticResource MetricsDividerBrush}" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="CornerRadius" Value="10" />
      <Setter Property="Padding" Value="14" />
      <Setter Property="Margin" Value="8" />
    </Style>

    <Style Selector="Border.metric-card.warning">
      <Setter Property="BorderBrush" Value="#FFA56CFF" />
      <Setter Property="Background" Value="#162131" />
    </Style>

    <Style Selector="Border.metric-card.critical">
      <Setter Property="BorderBrush" Value="#FFD64545" />
      <Setter Property="Background" Value="#211519" />
    </Style>

    <Style Selector="Border.metrics-summary-card">
      <Setter Property="Background" Value="{DynamicResource ThemeLayerLowBrush}" />
      <Setter Property="Padding" Value="16" />
      <Setter Property="CornerRadius" Value="12" />
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeControlMidBrush}" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="Margin" Value="0,0,16,0" />
    </Style>

    <Style Selector="TextBlock.metrics-summary-header">
      <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundLowBrush}" />
      <Setter Property="FontSize" Value="13" />
      <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <Style Selector="TextBlock.metrics-summary-value">
      <Setter Property="FontSize" Value="26" />
      <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style Selector="GridSplitter.metrics-splitter">
      <Setter Property="Background" Value="{StaticResource MetricsDividerBrush}" />
      <Setter Property="Width" Value="4" />
      <Setter Property="HorizontalAlignment" Value="Stretch" />
      <Setter Property="CornerRadius" Value="2" />
      <Setter Property="Margin" Value="4,0" />
    </Style>

    <Style Selector="Button.metrics-command">
      <Setter Property="Padding" Value="12,6" />
      <Setter Property="Margin" Value="0,0,6,0" />
      <Setter Property="MinWidth" Value="92" />
    </Style>

    <Style Selector="ToggleSwitch.metrics-toggle">
      <Setter Property="Margin" Value="0,0,12,0" />
    </Style>

    <Style Selector="Border.metrics-input-shell">
      <Setter Property="Background" Value="{DynamicResource ThemeLayerMidBrush}" />
      <Setter Property="Padding" Value="10,8" />
      <Setter Property="CornerRadius" Value="8" />
    </Style>

    <Style Selector="TextBlock.metrics-input-label">
      <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundLowBrush}" />
      <Setter Property="FontSize" Value="12" />
    </Style>

    <Style Selector="Border.metric-card TextBlock.metric-label">
      <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundLowBrush}" />
    </Style>

    <Style Selector="ctrl|TimelineGraph">
      <Setter Property="GridBrush" Value="{DynamicResource ThemeControlMidBrush}" />
      <Setter Property="BaselineBrush" Value="{DynamicResource ThemeForegroundLowBrush}" />
      <Setter Property="StrokeThickness" Value="1.6" />
      <Setter Property="GridLineCount" Value="4" />
      <Setter Property="Margin" Value="0,8,0,0" />
    </Style>
  </UserControl.Styles>

  <Grid RowDefinitions="Auto,Auto,*,2*" RowSpacing="18">
    <Border Background="{StaticResource MetricsHeaderBackground}" CornerRadius="16" Padding="20,16">
      <Grid ColumnDefinitions="*,Auto" RowDefinitions="Auto,Auto">
        <StackPanel Orientation="Vertical" Spacing="4">
          <TextBlock Text="Performance Monitor" FontSize="18" FontWeight="SemiBold" />
          <TextBlock Text="Capture timing, resource gauges, and activity telemetry in real time" Foreground="{DynamicResource ThemeForegroundLowBrush}" />
          <TextBlock Text="Capture paused"
                     Foreground="{DynamicResource ThemeAccentBrush}" FontWeight="SemiBold"
                     IsVisible="{Binding IsCapturePaused}" />
        </StackPanel>

        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Spacing="8">
          <ToggleSwitch Classes="metrics-toggle"
                        Content="Pause capture"
                        IsChecked="{Binding IsCapturePaused}">
            <ToolTip.Tip>
              <TextBlock Text="Toggle ingestion of live metrics." />
            </ToolTip.Tip>
          </ToggleSwitch>
          <Button Classes="metrics-command" Content="Pause" Command="{Binding PauseCommand}" />
          <Button Classes="metrics-command" Content="Resume" Command="{Binding ResumeCommand}" />
          <Button Classes="metrics-command" Content="Clear" Command="{Binding ClearCommand}" />
          <Button Classes="metrics-command" Content="Export" Command="{Binding ExportSnapshotCommand}" />
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal" Spacing="12" Margin="0,18,0,0">
          <Border Classes="metrics-input-shell">
            <StackPanel Orientation="Horizontal" Spacing="8" VerticalAlignment="Center">
              <TextBlock Classes="metrics-input-label" Text="Filter" VerticalAlignment="Center" />
              <TextBox Width="220"
                       Text="{Binding Timeline.Filter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       Watermark="Search activities" />
            </StackPanel>
          </Border>
          <Border Classes="metrics-input-shell">
            <StackPanel Orientation="Horizontal" Spacing="12" VerticalAlignment="Center">
              <TextBlock Classes="metrics-input-label" Text="Min duration (ms)" VerticalAlignment="Center" />
              <NumericUpDown Width="120"
                             Minimum="0"
                             Maximum="60000"
                             Increment="1"
                             Value="{Binding Timeline.MinimumDurationMilliseconds, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
          </Border>
        </StackPanel>
      </Grid>
    </Border>

    <Border Grid.Row="1" Background="{DynamicResource ThemeLayerLowBrush}" CornerRadius="14" Padding="18,14">
      <UniformGrid Columns="3" Rows="1" HorizontalAlignment="Stretch" VerticalAlignment="Center">
        <Border Classes="metrics-summary-card">
          <StackPanel Spacing="6">
            <TextBlock Classes="metrics-summary-header" Text="Histogram series" />
            <TextBlock Classes="metrics-summary-value" Text="{Binding Histograms.Count}" />
            <TextBlock Foreground="{DynamicResource ThemeForegroundLowBrush}" Text="Active timing probes" />
          </StackPanel>
        </Border>
        <Border Classes="metrics-summary-card">
          <StackPanel Spacing="6">
            <TextBlock Classes="metrics-summary-header" Text="Gauge series" />
            <TextBlock Classes="metrics-summary-value" Text="{Binding Gauges.Count}" />
            <TextBlock Foreground="{DynamicResource ThemeForegroundLowBrush}" Text="Tracked runtime counters" />
          </StackPanel>
        </Border>
        <Border Classes="metrics-summary-card">
          <StackPanel Spacing="6">
            <TextBlock Classes="metrics-summary-header" Text="Activity groups" />
            <TextBlock Classes="metrics-summary-value" Text="{Binding Timeline.Groups.Count}" />
            <TextBlock Foreground="{DynamicResource ThemeForegroundLowBrush}" Text="Instrumented pipelines" />
          </StackPanel>
        </Border>
      </UniformGrid>
    </Border>

    <Grid Grid.Row="2" ColumnDefinitions="*,Auto,*" ColumnSpacing="12">
      <Border Grid.Column="0" Padding="16" Background="{DynamicResource ThemeLayerMidBrush}" CornerRadius="12">
        <Grid RowDefinitions="Auto,*" RowSpacing="12">
          <Grid ColumnDefinitions="*,Auto">
            <TextBlock Text="Timing Histograms" FontWeight="SemiBold" FontSize="15" />
            <TextBlock Grid.Column="1"
                       HorizontalAlignment="Right"
                       Foreground="{DynamicResource ThemeForegroundLowBrush}"
                       Text="{Binding Histograms.Count, StringFormat={}{0} series}" />
          </Grid>
          <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Disabled">
            <ItemsControl ItemsSource="{Binding Histograms}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemTemplate>
                <DataTemplate x:DataType="metrics:HistogramMetricViewModel">
                  <Border Classes="metric-card" Width="360">
                    <Border.Styles>
                      <Style Selector="Border" x:DataType="metrics:HistogramMetricViewModel">
                        <Setter Property="Classes.warning" Value="{Binding IsWarning}" />
                        <Setter Property="Classes.critical" Value="{Binding IsCritical}" />
                      </Style>
                    </Border.Styles>

                    <Grid RowDefinitions="Auto,Auto,Auto,*" RowSpacing="10">
                      <Grid ColumnDefinitions="*,Auto" RowDefinitions="Auto,Auto" RowSpacing="4">
                        <StackPanel Orientation="Horizontal" Spacing="8">
                          <Ellipse Width="12" Height="12"
                                   VerticalAlignment="Center"
                                   Fill="{Binding Name, Converter={StaticResource HistogramStrokeBrushConverter}}" />
                          <TextBlock Text="{Binding Name}" FontWeight="SemiBold" />
                        </StackPanel>
                        <TextBlock Grid.Column="1"
                                   HorizontalAlignment="Right"
                                   Classes="metric-label"
                                   Text="{Binding Samples.Length, StringFormat={}{0} samples}" />
                        <TextBlock Grid.Row="1" Grid.ColumnSpan="2"
                                   Classes="metric-label"
                                   Text="{Binding LastSampleTimestamp, StringFormat=Updated {0:HH:mm:ss}}"
                                   IsVisible="{Binding LastSampleTimestamp, Converter={x:Static ObjectConverters.IsNotNull}}" />
                        <TextBlock Grid.Row="1" Grid.ColumnSpan="2"
                                   Classes="metric-label"
                                   Text="Waiting for samples"
                                   IsVisible="{Binding LastSampleTimestamp, Converter={x:Static ObjectConverters.IsNull}}" />
                      </Grid>

                      <Grid Grid.Row="1" ColumnDefinitions="*,*,*,*" ColumnSpacing="18">
                        <StackPanel Spacing="2">
                          <TextBlock Classes="metric-label" Text="Min" />
                          <TextBlock Text="{Binding Minimum, StringFormat={}{0:F2} ms}" />
                        </StackPanel>
                        <StackPanel Spacing="2">
                          <TextBlock Classes="metric-label" Text="Avg" />
                          <TextBlock Text="{Binding Average, StringFormat={}{0:F2} ms}" />
                        </StackPanel>
                        <StackPanel Spacing="2">
                          <TextBlock Classes="metric-label" Text="p95" />
                          <TextBlock Text="{Binding Percentile95, StringFormat={}{0:F2} ms}" FontWeight="SemiBold" />
                        </StackPanel>
                        <StackPanel Spacing="2">
                          <TextBlock Classes="metric-label" Text="Max" />
                          <TextBlock Text="{Binding Maximum, StringFormat={}{0:F2} ms}" />
                        </StackPanel>
                      </Grid>

                      <TextBlock Grid.Row="2"
                                 Classes="metric-label"
                                 Text="{Binding ThresholdDescription}"
                                 IsVisible="{Binding ThresholdDescription, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />

                      <ctrl:TimelineGraph Grid.Row="3"
                                           Height="152"
                                           Values="{Binding Samples}"
                                           Stroke="{Binding Name, Converter={StaticResource HistogramStrokeBrushConverter}}"
                                           AreaFill="{Binding Name, Converter={StaticResource HistogramFillBrushConverter}}" />
                    </Grid>

                    <ToolTip.Tip>
                      <StackPanel Spacing="4">
                        <TextBlock Text="{Binding Name}" FontWeight="SemiBold" />
                        <TextBlock Text="{Binding ThresholdDescription}" />
                        <TextBlock Text="Percentile 95 highlights near-worst frame timings." />
                      </StackPanel>
                    </ToolTip.Tip>
                  </Border>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </ScrollViewer>
        </Grid>
      </Border>

      <GridSplitter Grid.Column="1" Classes="metrics-splitter" ResizeDirection="Columns" />

      <Border Grid.Column="2" Padding="16" Background="{DynamicResource ThemeLayerMidBrush}" CornerRadius="12">
        <Grid RowDefinitions="Auto,*" RowSpacing="12">
          <Grid ColumnDefinitions="*,Auto">
            <TextBlock Text="Resource Gauges" FontWeight="SemiBold" FontSize="15" />
            <TextBlock Grid.Column="1"
                       HorizontalAlignment="Right"
                       Foreground="{DynamicResource ThemeForegroundLowBrush}"
                       Text="{Binding Gauges.Count, StringFormat={}{0} series}" />
          </Grid>
          <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Disabled">
            <ItemsControl ItemsSource="{Binding Gauges}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemTemplate>
                <DataTemplate x:DataType="metrics:GaugeMetricViewModel">
                  <Border Classes="metric-card" Width="320">
                    <Border.Styles>
                      <Style Selector="Border" x:DataType="metrics:GaugeMetricViewModel">
                        <Setter Property="Classes.warning" Value="{Binding IsWarning}" />
                        <Setter Property="Classes.critical" Value="{Binding IsCritical}" />
                      </Style>
                    </Border.Styles>

                    <Grid RowDefinitions="Auto,Auto,Auto,*" RowSpacing="10">
                      <Grid ColumnDefinitions="*,Auto" RowDefinitions="Auto,Auto" RowSpacing="4">
                        <StackPanel Orientation="Horizontal" Spacing="8">
                          <Ellipse Width="12" Height="12"
                                   VerticalAlignment="Center"
                                   Fill="{Binding Name, Converter={StaticResource GaugeStrokeBrushConverter}}" />
                          <TextBlock Text="{Binding Name}" FontWeight="SemiBold" />
                        </StackPanel>
                        <TextBlock Grid.Column="1"
                                   HorizontalAlignment="Right"
                                   Classes="metric-label"
                                   Text="{Binding History.Length, StringFormat={}{0} samples}" />
                        <TextBlock Grid.Row="1" Grid.ColumnSpan="2"
                                   Classes="metric-label"
                                   Text="{Binding LastSampleTimestamp, StringFormat=Updated {0:HH:mm:ss}}"
                                   IsVisible="{Binding LastSampleTimestamp, Converter={x:Static ObjectConverters.IsNotNull}}" />
                        <TextBlock Grid.Row="1" Grid.ColumnSpan="2"
                                   Classes="metric-label"
                                   Text="Waiting for samples"
                                   IsVisible="{Binding LastSampleTimestamp, Converter={x:Static ObjectConverters.IsNull}}" />
                      </Grid>

                      <Grid Grid.Row="1" ColumnDefinitions="*,*,*,*" ColumnSpacing="16">
                        <StackPanel Spacing="2">
                          <TextBlock Classes="metric-label" Text="Current" />
                          <TextBlock Text="{Binding Current, StringFormat={}{0:F0}}" FontWeight="SemiBold" />
                        </StackPanel>
                        <StackPanel Spacing="2">
                          <TextBlock Classes="metric-label" Text="Δ" />
                          <TextBlock Text="{Binding Delta, StringFormat={}{0:+0;-0;0}}" />
                        </StackPanel>
                        <StackPanel Spacing="2">
                          <TextBlock Classes="metric-label" Text="Min" />
                          <TextBlock Text="{Binding Minimum, StringFormat={}{0:F0}}" />
                        </StackPanel>
                        <StackPanel Spacing="2">
                          <TextBlock Classes="metric-label" Text="Max" />
                          <TextBlock Text="{Binding Maximum, StringFormat={}{0:F0}}" />
                        </StackPanel>
                      </Grid>

                      <TextBlock Grid.Row="2"
                                 Classes="metric-label"
                                 Text="{Binding ThresholdDescription}"
                                 IsVisible="{Binding ThresholdDescription, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />

                      <ctrl:TimelineGraph Grid.Row="3"
                                           Height="128"
                                           Values="{Binding History}"
                                           Stroke="{Binding Name, Converter={StaticResource GaugeStrokeBrushConverter}}"
                                           AreaFill="{Binding Name, Converter={StaticResource GaugeFillBrushConverter}}" />
                    </Grid>

                    <ToolTip.Tip>
                      <StackPanel Spacing="4">
                        <TextBlock Text="{Binding Name}" FontWeight="SemiBold" />
                        <TextBlock Text="{Binding ThresholdDescription}" />
                        <TextBlock Text="Gauge history tracks the latest observed values." />
                      </StackPanel>
                    </ToolTip.Tip>
                  </Border>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </ScrollViewer>
        </Grid>
      </Border>
    </Grid>

    <Border Grid.Row="3" Padding="18" Background="{DynamicResource ThemeLayerMidBrush}" CornerRadius="12">
      <Grid RowDefinitions="Auto,*,Auto" RowSpacing="12">
        <StackPanel Orientation="Horizontal" Spacing="14" VerticalAlignment="Center">
          <TextBlock Text="Activity Timeline" FontWeight="SemiBold" FontSize="15" />
          <TextBlock Foreground="{DynamicResource ThemeForegroundLowBrush}" Text="{Binding Timeline.Groups.Count, StringFormat={}{0} groups}" />
          <TextBlock Text="Capture paused"
                     Foreground="{DynamicResource ThemeForegroundLowBrush}"
                     FontStyle="Italic"
                     IsVisible="{Binding Timeline.IsPaused}" />
        </StackPanel>
        <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
          <ItemsControl ItemsSource="{Binding Timeline.Groups}">
            <ItemsControl.ItemTemplate>
              <DataTemplate x:DataType="metrics:ActivityTimelineViewModel+ActivityGroupViewModel">
                <Border Padding="12" Margin="0,0,0,12" Background="{DynamicResource ThemeLayerLowBrush}" CornerRadius="8">
                  <StackPanel Spacing="8">
                    <TextBlock Text="{Binding Name}" FontWeight="SemiBold" />
                    <ItemsControl ItemsSource="{Binding Items}">
                      <ItemsControl.ItemTemplate>
                        <DataTemplate x:DataType="metrics:ActivityTimelineViewModel+ActivityItemViewModel">
                          <Border Background="{StaticResource MetricsSurfaceBrush}" CornerRadius="6" Padding="10" Margin="0,0,0,6">
                            <StackPanel Spacing="6">
                              <Grid ColumnDefinitions="*,Auto,Auto" ColumnSpacing="16">
                                <TextBlock Grid.Column="0" Text="{Binding Name}" FontWeight="Medium" />
                                <TextBlock Grid.Column="1" Text="{Binding Duration.TotalMilliseconds, StringFormat={}{0:F2} ms}" />
                                <TextBlock Grid.Column="2" Text="{Binding StartTime, StringFormat={}{0:HH:mm:ss.fff}}" />
                              </Grid>
                              <StackPanel Orientation="Horizontal" Spacing="16">
                                <TextBlock Text="{Binding ParentId, StringFormat=Parent: {0}}" />
                                <TextBlock Text="{Binding Id, StringFormat=Id: {0}}" />
                              </StackPanel>
                            </StackPanel>
                          </Border>
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                  </StackPanel>
                </Border>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>
        </ScrollViewer>
        <ctrl:SourcePreviewEditor Grid.Row="2"
                                  Margin="0,8,0,0"
                                  DataContext="{Binding TimelinePreview}"
                                  IsVisible="{Binding ., Converter={x:Static ObjectConverters.IsNotNull}}" />
      </Grid>
    </Border>
  </Grid>
</UserControl>
